{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerName": {
            "type": "String"
        },
        "location": {
            "type": "String",
            "defaultValue": "northeurope"
        },
        "containerURI": {
            "type": "String",
            "defaultValue": "templafyshared.azurecr.io/email-signature-server:latest"
        },
        "numberCores": {
            "type": "String",
            "defaultValue": "1"
        },
        "memory": {
            "type": "String",
            "defaultValue": "1.5"
        },
        "dnsLabel": {
            "defaultValue": "",
            "type": "String"
        },
        "ports": {
            "defaultValue": "{\"port\":  25, \"protocol\": \"TCP\"}",
            "type": "String"
        },
        "ports2": {
            "defaultValue": "",
            "type": "String"
        },
        "ports3": {
            "defaultValue": "",
            "type": "String"
        },
        "hasPort2": {
            "type": "bool",
            "defaultValue": false
        },
        "hasPort3": {
            "type": "bool",
            "defaultValue": false
        },
        "commands": {
            "defaultValue": "none",
            "type": "String"
        },
        "environmentVariable": {
            "defaultValue":  "\"office365ApplicationId\":\"[office365ApplicationId]\"",
            "type": "String"
        },
        "environmentVariable2": {
            "defaultValue": "\"office365DomainName\":\"[Office365DomainName].onmicrosoft.com\"",
            "type": "String"
        },
        "environmentVariable3": {
            "defaultValue": "\"azureStorageAccount\":\"DefaultEndpointsProtocol=https;AccountName=[AccountName];AccountKey=[AccountKey]\"",
            "type": "String"
        },
        "hasEnvironmentVariable": {
            "type": "bool",
            "defaultValue": true
        },
        "hasEnvironmentVariable2": {
            "type": "bool",
            "defaultValue": true
        },
        "hasEnvironmentVariable3": {
            "type": "bool",
            "defaultValue": true
        },
        "restartPolicy": {
            "type": "String",
            "defaultValue": "always"
        }
    },
    "variables": {
        "APIversion": "2018-04-01",
        "containerName": "[parameters('containerName')]",
        "location": "[parameters('location')]",
        "containerURI": "[parameters('containerURI')]",
        "imageRegistryLoginServer": "templafyshared.azurecr.io",
        "imageUsername": "templafyshared",
        "imagePassword": "xo7XHXMwjwcSb84CQX6lePKxCzkq10y+",
        "osType": "Linux",
        "numberCores": "[int(parameters('numberCores'))]",
        "memory": "[float(parameters('memory'))]",
        "dnsLabel": "[parameters('dnsLabel')]",
        "port": "[parameters('ports')]",
        "ports": "[if(and(parameters('hasPort2'), parameters('hasPort3')), createArray(json(parameters('ports')), json(parameters('ports2')), json(parameters('ports3'))), if(parameters('hasPort2'), createArray(json(parameters('ports')), json(parameters('ports2'))), if(parameters('hasPort3'), createArray(json(parameters('ports')), json(parameters('ports3'))), createArray(json(parameters('ports'))))))]",
        "commands": "[if(equals(parameters('commands'), 'none'), take(createArray(''), 0), split(parameters('commands'), ', '))]",
        "environmentVariable": "[json(concat('{\"name\":  ', first(split(parameters('environmentVariable'), ':')), ', \"value\": ', last(take(split(parameters('environmentVariable'), ':'), 2)), '}'))]",
        "environmentVariable2": "[json(concat('{\"name\":  ', first(split(parameters('environmentVariable2'), ':')), ', \"value\": ', last(take(split(parameters('environmentVariable2'), ':'), 2)), '}'))]",
        "environmentVariable3": "[json(concat('{\"name\":  ', first(split(parameters('environmentVariable3'), ':')), ', \"value\": ', last(take(split(parameters('environmentVariable3'), ':'), 2)), '}'))]",
        "EVall": "[createArray(variables('environmentVariable'), variables('environmentVariable2'), variables('environmentVariable3'))]",
        "EV12": "[createArray(variables('environmentVariable'), variables('environmentVariable2'))]",
        "EV13": "[createArray(variables('environmentVariable'), variables('environmentVariable3'))]",
        "EV23": "[createArray(variables('environmentVariable2'), variables('environmentVariable3'))]",
        "EV1": "[createArray(variables('environmentVariable'))]",
        "EV2": "[createArray(variables('environmentVariable2'))]",
        "EV3": "[createArray(variables('environmentVariable3'))]",
        "EV": "[if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable2'), parameters('hasEnvironmentVariable3')), variables('EVall'), if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable2')), variables('EV12'), if(and(parameters('hasEnvironmentVariable'), parameters('hasEnvironmentVariable3')), variables('EV13'), if(and(parameters('hasEnvironmentVariable2'), parameters('hasEnvironmentVariable3')), variables('EV23'), if(parameters('hasEnvironmentVariable'), variables('EV1'), if(parameters('hasEnvironmentVariable2'), variables('EV2'), if(parameters('hasEnvironmentVariable3'), variables('EV3'), take(createArray(''), 0))))))))]",
        "restartPolicy": "[parameters('restartPolicy')]"
    },
    "resources": [
        {
            "name": "[variables('containerName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "[variables('APIversion')]",
            "location": "[variables('location')]",
            "properties": {
                "containers": [
                    {
                        "name": "[variables('containerName')]",
                        "properties": {
                            "image": "[variables('containerURI')]",
                            "command": "[variables('commands')]",
                            "environmentVariables": "[variables('EV')]",
                            "ports": "[variables('ports')]",
                            "resources": {
                                "requests": {
                                    "cpu": "[variables('numberCores')]",
                                    "memoryInGb": "[variables('memory')]"
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "[variables('restartPolicy')]",
                "osType": "[variables('osType')]",
                "ipAddress": {
                    "type": "Public",
                    "dnsNameLabel": "[variables('dnsLabel')]",
                    "ports": "[variables('ports')]"
                },
                "imageRegistryCredentials": [
                    {
                        "server": "[variables('imageRegistryLoginServer')]",
                        "username": "[variables('imageUsername')]",
                        "password": "[variables('imagePassword')]"
                    }
                ]
            }
        }
    ],
    "outputs": {}
}